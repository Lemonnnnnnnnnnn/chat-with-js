// use std::{error::Error, path::PathBuf};

// use crate::utils::{get_absolute_path, try_extensions};


// // 子函数：处理 node_modules 解析
// pub fn resolve_node_modules(
//     import: &str,
//     extensions: &[&str],
// ) -> Result<Option<PathBuf>, Box<dyn Error>> {
//     let current_dir = PathBuf::from(get_absolute_path(None));

//     let node_modules_path = current_dir.join("node_modules").join(import);
//     if let Some(found_path) = try_extensions(&node_modules_path, extensions) {
//         return Ok(Some(found_path));
//     } else {
//         eprintln!("node_modules 路径 '{}' 不存在", node_modules_path.display());
//     }
//     Ok(None)
// }
